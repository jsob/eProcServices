/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package tj.podtverzhdenie.na.uchastie.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import tj.podtverzhdenie.na.uchastie.model.podtverzhdenie_na_uchastie;
import tj.podtverzhdenie.na.uchastie.model.podtverzhdenie_na_uchastieModel;
import tj.podtverzhdenie.na.uchastie.model.podtverzhdenie_na_uchastieSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the podtverzhdenie_na_uchastie service. Represents a row in the &quot;sapp.podtverzhdenie_na_uchastie&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link podtverzhdenie_na_uchastieModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link podtverzhdenie_na_uchastieImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see podtverzhdenie_na_uchastieImpl
 * @see podtverzhdenie_na_uchastie
 * @see podtverzhdenie_na_uchastieModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class podtverzhdenie_na_uchastieModelImpl extends BaseModelImpl<podtverzhdenie_na_uchastie>
	implements podtverzhdenie_na_uchastieModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a podtverzhdenie_na_uchastie model instance should use the {@link podtverzhdenie_na_uchastie} interface instead.
	 */
	public static final String TABLE_NAME = "sapp.podtverzhdenie_na_uchastie";
	public static final Object[][] TABLE_COLUMNS = {
			{ "data_sozdanija", Types.TIMESTAMP },
			{ "izvewenie_id", Types.BIGINT },
			{ "lot_id", Types.BIGINT },
			{ "podtverzhdenie_na_uchastie_id", Types.BIGINT },
			{ "postavwik_id", Types.BIGINT },
			{ "sozdal", Types.BIGINT }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("data_sozdanija", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("izvewenie_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("lot_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("podtverzhdenie_na_uchastie_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("postavwik_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("sozdal", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE = "create table sapp.podtverzhdenie_na_uchastie (data_sozdanija DATE null,izvewenie_id LONG,lot_id LONG,podtverzhdenie_na_uchastie_id LONG not null primary key,postavwik_id LONG,sozdal LONG)";
	public static final String TABLE_SQL_DROP = "drop table sapp.podtverzhdenie_na_uchastie";
	public static final String ORDER_BY_JPQL = " ORDER BY podtverzhdenie_na_uchastie.podtverzhdenie_na_uchastie_id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY sapp.podtverzhdenie_na_uchastie.podtverzhdenie_na_uchastie_id ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(tj.podtverzhdenie.na.uchastie.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.tj.podtverzhdenie.na.uchastie.model.podtverzhdenie_na_uchastie"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(tj.podtverzhdenie.na.uchastie.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.tj.podtverzhdenie.na.uchastie.model.podtverzhdenie_na_uchastie"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static podtverzhdenie_na_uchastie toModel(
		podtverzhdenie_na_uchastieSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		podtverzhdenie_na_uchastie model = new podtverzhdenie_na_uchastieImpl();

		model.setData_sozdanija(soapModel.getData_sozdanija());
		model.setIzvewenie_id(soapModel.getIzvewenie_id());
		model.setLot_id(soapModel.getLot_id());
		model.setPodtverzhdenie_na_uchastie_id(soapModel.getPodtverzhdenie_na_uchastie_id());
		model.setPostavwik_id(soapModel.getPostavwik_id());
		model.setSozdal(soapModel.getSozdal());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<podtverzhdenie_na_uchastie> toModels(
		podtverzhdenie_na_uchastieSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<podtverzhdenie_na_uchastie> models = new ArrayList<podtverzhdenie_na_uchastie>(soapModels.length);

		for (podtverzhdenie_na_uchastieSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(tj.podtverzhdenie.na.uchastie.service.util.ServiceProps.get(
				"lock.expiration.time.tj.podtverzhdenie.na.uchastie.model.podtverzhdenie_na_uchastie"));

	public podtverzhdenie_na_uchastieModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _podtverzhdenie_na_uchastie_id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setPodtverzhdenie_na_uchastie_id(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _podtverzhdenie_na_uchastie_id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return podtverzhdenie_na_uchastie.class;
	}

	@Override
	public String getModelClassName() {
		return podtverzhdenie_na_uchastie.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("data_sozdanija", getData_sozdanija());
		attributes.put("izvewenie_id", getIzvewenie_id());
		attributes.put("lot_id", getLot_id());
		attributes.put("podtverzhdenie_na_uchastie_id",
			getPodtverzhdenie_na_uchastie_id());
		attributes.put("postavwik_id", getPostavwik_id());
		attributes.put("sozdal", getSozdal());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Date data_sozdanija = (Date)attributes.get("data_sozdanija");

		if (data_sozdanija != null) {
			setData_sozdanija(data_sozdanija);
		}

		Long izvewenie_id = (Long)attributes.get("izvewenie_id");

		if (izvewenie_id != null) {
			setIzvewenie_id(izvewenie_id);
		}

		Long lot_id = (Long)attributes.get("lot_id");

		if (lot_id != null) {
			setLot_id(lot_id);
		}

		Long podtverzhdenie_na_uchastie_id = (Long)attributes.get(
				"podtverzhdenie_na_uchastie_id");

		if (podtverzhdenie_na_uchastie_id != null) {
			setPodtverzhdenie_na_uchastie_id(podtverzhdenie_na_uchastie_id);
		}

		Long postavwik_id = (Long)attributes.get("postavwik_id");

		if (postavwik_id != null) {
			setPostavwik_id(postavwik_id);
		}

		Long sozdal = (Long)attributes.get("sozdal");

		if (sozdal != null) {
			setSozdal(sozdal);
		}
	}

	@JSON
	@Override
	public Date getData_sozdanija() {
		return _data_sozdanija;
	}

	@Override
	public void setData_sozdanija(Date data_sozdanija) {
		_data_sozdanija = data_sozdanija;
	}

	@JSON
	@Override
	public long getIzvewenie_id() {
		return _izvewenie_id;
	}

	@Override
	public void setIzvewenie_id(long izvewenie_id) {
		_izvewenie_id = izvewenie_id;
	}

	@JSON
	@Override
	public long getLot_id() {
		return _lot_id;
	}

	@Override
	public void setLot_id(long lot_id) {
		_lot_id = lot_id;
	}

	@JSON
	@Override
	public long getPodtverzhdenie_na_uchastie_id() {
		return _podtverzhdenie_na_uchastie_id;
	}

	@Override
	public void setPodtverzhdenie_na_uchastie_id(
		long podtverzhdenie_na_uchastie_id) {
		_podtverzhdenie_na_uchastie_id = podtverzhdenie_na_uchastie_id;
	}

	@JSON
	@Override
	public long getPostavwik_id() {
		return _postavwik_id;
	}

	@Override
	public void setPostavwik_id(long postavwik_id) {
		_postavwik_id = postavwik_id;
	}

	@JSON
	@Override
	public long getSozdal() {
		return _sozdal;
	}

	@Override
	public void setSozdal(long sozdal) {
		_sozdal = sozdal;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			podtverzhdenie_na_uchastie.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public podtverzhdenie_na_uchastie toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (podtverzhdenie_na_uchastie)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		podtverzhdenie_na_uchastieImpl podtverzhdenie_na_uchastieImpl = new podtverzhdenie_na_uchastieImpl();

		podtverzhdenie_na_uchastieImpl.setData_sozdanija(getData_sozdanija());
		podtverzhdenie_na_uchastieImpl.setIzvewenie_id(getIzvewenie_id());
		podtverzhdenie_na_uchastieImpl.setLot_id(getLot_id());
		podtverzhdenie_na_uchastieImpl.setPodtverzhdenie_na_uchastie_id(getPodtverzhdenie_na_uchastie_id());
		podtverzhdenie_na_uchastieImpl.setPostavwik_id(getPostavwik_id());
		podtverzhdenie_na_uchastieImpl.setSozdal(getSozdal());

		podtverzhdenie_na_uchastieImpl.resetOriginalValues();

		return podtverzhdenie_na_uchastieImpl;
	}

	@Override
	public int compareTo(podtverzhdenie_na_uchastie podtverzhdenie_na_uchastie) {
		long primaryKey = podtverzhdenie_na_uchastie.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof podtverzhdenie_na_uchastie)) {
			return false;
		}

		podtverzhdenie_na_uchastie podtverzhdenie_na_uchastie = (podtverzhdenie_na_uchastie)obj;

		long primaryKey = podtverzhdenie_na_uchastie.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<podtverzhdenie_na_uchastie> toCacheModel() {
		podtverzhdenie_na_uchastieCacheModel podtverzhdenie_na_uchastieCacheModel =
			new podtverzhdenie_na_uchastieCacheModel();

		Date data_sozdanija = getData_sozdanija();

		if (data_sozdanija != null) {
			podtverzhdenie_na_uchastieCacheModel.data_sozdanija = data_sozdanija.getTime();
		}
		else {
			podtverzhdenie_na_uchastieCacheModel.data_sozdanija = Long.MIN_VALUE;
		}

		podtverzhdenie_na_uchastieCacheModel.izvewenie_id = getIzvewenie_id();

		podtverzhdenie_na_uchastieCacheModel.lot_id = getLot_id();

		podtverzhdenie_na_uchastieCacheModel.podtverzhdenie_na_uchastie_id = getPodtverzhdenie_na_uchastie_id();

		podtverzhdenie_na_uchastieCacheModel.postavwik_id = getPostavwik_id();

		podtverzhdenie_na_uchastieCacheModel.sozdal = getSozdal();

		return podtverzhdenie_na_uchastieCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(13);

		sb.append("{data_sozdanija=");
		sb.append(getData_sozdanija());
		sb.append(", izvewenie_id=");
		sb.append(getIzvewenie_id());
		sb.append(", lot_id=");
		sb.append(getLot_id());
		sb.append(", podtverzhdenie_na_uchastie_id=");
		sb.append(getPodtverzhdenie_na_uchastie_id());
		sb.append(", postavwik_id=");
		sb.append(getPostavwik_id());
		sb.append(", sozdal=");
		sb.append(getSozdal());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(22);

		sb.append("<model><model-name>");
		sb.append(
			"tj.podtverzhdenie.na.uchastie.model.podtverzhdenie_na_uchastie");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>data_sozdanija</column-name><column-value><![CDATA[");
		sb.append(getData_sozdanija());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>izvewenie_id</column-name><column-value><![CDATA[");
		sb.append(getIzvewenie_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lot_id</column-name><column-value><![CDATA[");
		sb.append(getLot_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>podtverzhdenie_na_uchastie_id</column-name><column-value><![CDATA[");
		sb.append(getPodtverzhdenie_na_uchastie_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>postavwik_id</column-name><column-value><![CDATA[");
		sb.append(getPostavwik_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sozdal</column-name><column-value><![CDATA[");
		sb.append(getSozdal());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = podtverzhdenie_na_uchastie.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			podtverzhdenie_na_uchastie.class
		};
	private Date _data_sozdanija;
	private long _izvewenie_id;
	private long _lot_id;
	private long _podtverzhdenie_na_uchastie_id;
	private long _postavwik_id;
	private long _sozdal;
	private podtverzhdenie_na_uchastie _escapedModel;
}