/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package tj.rezultat.opredelenija.sootvetstvija.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import tj.rezultat.opredelenija.sootvetstvija.model.rezultat_opredelenija_sootvetstvija;
import tj.rezultat.opredelenija.sootvetstvija.model.rezultat_opredelenija_sootvetstvijaModel;
import tj.rezultat.opredelenija.sootvetstvija.model.rezultat_opredelenija_sootvetstvijaSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the rezultat_opredelenija_sootvetstvija service. Represents a row in the &quot;rezultat_opredelenija_sootvetstvija_rezultat_opredelenija_sootvetstvija&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link rezultat_opredelenija_sootvetstvijaModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link rezultat_opredelenija_sootvetstvijaImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see rezultat_opredelenija_sootvetstvijaImpl
 * @see rezultat_opredelenija_sootvetstvija
 * @see rezultat_opredelenija_sootvetstvijaModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class rezultat_opredelenija_sootvetstvijaModelImpl extends BaseModelImpl<rezultat_opredelenija_sootvetstvija>
	implements rezultat_opredelenija_sootvetstvijaModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a rezultat_opredelenija_sootvetstvija model instance should use the {@link rezultat_opredelenija_sootvetstvija} interface instead.
	 */
	public static final String TABLE_NAME = "rezultat_opredelenija_sootvetstvija_rezultat_opredelenija_sootvetstvija";
	public static final Object[][] TABLE_COLUMNS = {
			{ "data_sozdanija", Types.TIMESTAMP },
			{ "izvewenie_id", Types.BIGINT },
			{ "rezultat_opredelenija_sootvetstvija_id", Types.BIGINT },
			{ "sozdal", Types.BIGINT }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("data_sozdanija", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("izvewenie_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("rezultat_opredelenija_sootvetstvija_id",
			Types.BIGINT);
		TABLE_COLUMNS_MAP.put("sozdal", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE = "create table rezultat_opredelenija_sootvetstvija_rezultat_opredelenija_sootvetstvija (data_sozdanija DATE null,izvewenie_id LONG,rezultat_opredelenija_sootvetstvija_id LONG not null primary key,sozdal LONG)";
	public static final String TABLE_SQL_DROP = "drop table rezultat_opredelenija_sootvetstvija_rezultat_opredelenija_sootvetstvija";
	public static final String ORDER_BY_JPQL = " ORDER BY rezultat_opredelenija_sootvetstvija.rezultat_opredelenija_sootvetstvija_id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY rezultat_opredelenija_sootvetstvija_rezultat_opredelenija_sootvetstvija.rezultat_opredelenija_sootvetstvija_id ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(tj.rezultat.opredelenija.sootvetstvija.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.tj.rezultat.opredelenija.sootvetstvija.model.rezultat_opredelenija_sootvetstvija"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(tj.rezultat.opredelenija.sootvetstvija.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.tj.rezultat.opredelenija.sootvetstvija.model.rezultat_opredelenija_sootvetstvija"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static rezultat_opredelenija_sootvetstvija toModel(
		rezultat_opredelenija_sootvetstvijaSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		rezultat_opredelenija_sootvetstvija model = new rezultat_opredelenija_sootvetstvijaImpl();

		model.setData_sozdanija(soapModel.getData_sozdanija());
		model.setIzvewenie_id(soapModel.getIzvewenie_id());
		model.setRezultat_opredelenija_sootvetstvija_id(soapModel.getRezultat_opredelenija_sootvetstvija_id());
		model.setSozdal(soapModel.getSozdal());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<rezultat_opredelenija_sootvetstvija> toModels(
		rezultat_opredelenija_sootvetstvijaSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<rezultat_opredelenija_sootvetstvija> models = new ArrayList<rezultat_opredelenija_sootvetstvija>(soapModels.length);

		for (rezultat_opredelenija_sootvetstvijaSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(tj.rezultat.opredelenija.sootvetstvija.service.util.ServiceProps.get(
				"lock.expiration.time.tj.rezultat.opredelenija.sootvetstvija.model.rezultat_opredelenija_sootvetstvija"));

	public rezultat_opredelenija_sootvetstvijaModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _rezultat_opredelenija_sootvetstvija_id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setRezultat_opredelenija_sootvetstvija_id(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _rezultat_opredelenija_sootvetstvija_id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return rezultat_opredelenija_sootvetstvija.class;
	}

	@Override
	public String getModelClassName() {
		return rezultat_opredelenija_sootvetstvija.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("data_sozdanija", getData_sozdanija());
		attributes.put("izvewenie_id", getIzvewenie_id());
		attributes.put("rezultat_opredelenija_sootvetstvija_id",
			getRezultat_opredelenija_sootvetstvija_id());
		attributes.put("sozdal", getSozdal());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Date data_sozdanija = (Date)attributes.get("data_sozdanija");

		if (data_sozdanija != null) {
			setData_sozdanija(data_sozdanija);
		}

		Long izvewenie_id = (Long)attributes.get("izvewenie_id");

		if (izvewenie_id != null) {
			setIzvewenie_id(izvewenie_id);
		}

		Long rezultat_opredelenija_sootvetstvija_id = (Long)attributes.get(
				"rezultat_opredelenija_sootvetstvija_id");

		if (rezultat_opredelenija_sootvetstvija_id != null) {
			setRezultat_opredelenija_sootvetstvija_id(rezultat_opredelenija_sootvetstvija_id);
		}

		Long sozdal = (Long)attributes.get("sozdal");

		if (sozdal != null) {
			setSozdal(sozdal);
		}
	}

	@JSON
	@Override
	public Date getData_sozdanija() {
		return _data_sozdanija;
	}

	@Override
	public void setData_sozdanija(Date data_sozdanija) {
		_data_sozdanija = data_sozdanija;
	}

	@JSON
	@Override
	public long getIzvewenie_id() {
		return _izvewenie_id;
	}

	@Override
	public void setIzvewenie_id(long izvewenie_id) {
		_izvewenie_id = izvewenie_id;
	}

	@JSON
	@Override
	public long getRezultat_opredelenija_sootvetstvija_id() {
		return _rezultat_opredelenija_sootvetstvija_id;
	}

	@Override
	public void setRezultat_opredelenija_sootvetstvija_id(
		long rezultat_opredelenija_sootvetstvija_id) {
		_rezultat_opredelenija_sootvetstvija_id = rezultat_opredelenija_sootvetstvija_id;
	}

	@JSON
	@Override
	public long getSozdal() {
		return _sozdal;
	}

	@Override
	public void setSozdal(long sozdal) {
		_sozdal = sozdal;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			rezultat_opredelenija_sootvetstvija.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public rezultat_opredelenija_sootvetstvija toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (rezultat_opredelenija_sootvetstvija)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		rezultat_opredelenija_sootvetstvijaImpl rezultat_opredelenija_sootvetstvijaImpl =
			new rezultat_opredelenija_sootvetstvijaImpl();

		rezultat_opredelenija_sootvetstvijaImpl.setData_sozdanija(getData_sozdanija());
		rezultat_opredelenija_sootvetstvijaImpl.setIzvewenie_id(getIzvewenie_id());
		rezultat_opredelenija_sootvetstvijaImpl.setRezultat_opredelenija_sootvetstvija_id(getRezultat_opredelenija_sootvetstvija_id());
		rezultat_opredelenija_sootvetstvijaImpl.setSozdal(getSozdal());

		rezultat_opredelenija_sootvetstvijaImpl.resetOriginalValues();

		return rezultat_opredelenija_sootvetstvijaImpl;
	}

	@Override
	public int compareTo(
		rezultat_opredelenija_sootvetstvija rezultat_opredelenija_sootvetstvija) {
		long primaryKey = rezultat_opredelenija_sootvetstvija.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof rezultat_opredelenija_sootvetstvija)) {
			return false;
		}

		rezultat_opredelenija_sootvetstvija rezultat_opredelenija_sootvetstvija = (rezultat_opredelenija_sootvetstvija)obj;

		long primaryKey = rezultat_opredelenija_sootvetstvija.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<rezultat_opredelenija_sootvetstvija> toCacheModel() {
		rezultat_opredelenija_sootvetstvijaCacheModel rezultat_opredelenija_sootvetstvijaCacheModel =
			new rezultat_opredelenija_sootvetstvijaCacheModel();

		Date data_sozdanija = getData_sozdanija();

		if (data_sozdanija != null) {
			rezultat_opredelenija_sootvetstvijaCacheModel.data_sozdanija = data_sozdanija.getTime();
		}
		else {
			rezultat_opredelenija_sootvetstvijaCacheModel.data_sozdanija = Long.MIN_VALUE;
		}

		rezultat_opredelenija_sootvetstvijaCacheModel.izvewenie_id = getIzvewenie_id();

		rezultat_opredelenija_sootvetstvijaCacheModel.rezultat_opredelenija_sootvetstvija_id = getRezultat_opredelenija_sootvetstvija_id();

		rezultat_opredelenija_sootvetstvijaCacheModel.sozdal = getSozdal();

		return rezultat_opredelenija_sootvetstvijaCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(9);

		sb.append("{data_sozdanija=");
		sb.append(getData_sozdanija());
		sb.append(", izvewenie_id=");
		sb.append(getIzvewenie_id());
		sb.append(", rezultat_opredelenija_sootvetstvija_id=");
		sb.append(getRezultat_opredelenija_sootvetstvija_id());
		sb.append(", sozdal=");
		sb.append(getSozdal());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(16);

		sb.append("<model><model-name>");
		sb.append(
			"tj.rezultat.opredelenija.sootvetstvija.model.rezultat_opredelenija_sootvetstvija");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>data_sozdanija</column-name><column-value><![CDATA[");
		sb.append(getData_sozdanija());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>izvewenie_id</column-name><column-value><![CDATA[");
		sb.append(getIzvewenie_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rezultat_opredelenija_sootvetstvija_id</column-name><column-value><![CDATA[");
		sb.append(getRezultat_opredelenija_sootvetstvija_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sozdal</column-name><column-value><![CDATA[");
		sb.append(getSozdal());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = rezultat_opredelenija_sootvetstvija.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			rezultat_opredelenija_sootvetstvija.class
		};
	private Date _data_sozdanija;
	private long _izvewenie_id;
	private long _rezultat_opredelenija_sootvetstvija_id;
	private long _sozdal;
	private rezultat_opredelenija_sootvetstvija _escapedModel;
}