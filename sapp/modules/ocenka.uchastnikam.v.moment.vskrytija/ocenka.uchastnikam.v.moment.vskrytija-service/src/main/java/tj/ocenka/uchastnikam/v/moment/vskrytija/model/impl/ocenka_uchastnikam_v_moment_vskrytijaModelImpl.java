/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package tj.ocenka.uchastnikam.v.moment.vskrytija.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import tj.ocenka.uchastnikam.v.moment.vskrytija.model.ocenka_uchastnikam_v_moment_vskrytija;
import tj.ocenka.uchastnikam.v.moment.vskrytija.model.ocenka_uchastnikam_v_moment_vskrytijaModel;
import tj.ocenka.uchastnikam.v.moment.vskrytija.model.ocenka_uchastnikam_v_moment_vskrytijaSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the ocenka_uchastnikam_v_moment_vskrytija service. Represents a row in the &quot;sapp.ocenka_uchastnikam_v_moment_vskrytija&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link ocenka_uchastnikam_v_moment_vskrytijaModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ocenka_uchastnikam_v_moment_vskrytijaImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ocenka_uchastnikam_v_moment_vskrytijaImpl
 * @see ocenka_uchastnikam_v_moment_vskrytija
 * @see ocenka_uchastnikam_v_moment_vskrytijaModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class ocenka_uchastnikam_v_moment_vskrytijaModelImpl
	extends BaseModelImpl<ocenka_uchastnikam_v_moment_vskrytija>
	implements ocenka_uchastnikam_v_moment_vskrytijaModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a ocenka_uchastnikam_v_moment_vskrytija model instance should use the {@link ocenka_uchastnikam_v_moment_vskrytija} interface instead.
	 */
	public static final String TABLE_NAME = "sapp.ocenka_uchastnikam_v_moment_vskrytija";
	public static final Object[][] TABLE_COLUMNS = {
			{ "data_otkaza", Types.TIMESTAMP },
			{ "data_vskrytija", Types.TIMESTAMP },
			{ "izvewenie_id", Types.BIGINT },
			{ "lot_id", Types.BIGINT },
			{ "ocenka_uchastnikam_v_moment_vskrytija_id", Types.BIGINT },
			{ "otkazal", Types.BIGINT },
			{ "postavwik_id", Types.BIGINT },
			{ "prichina_otkaza", Types.VARCHAR },
			{ "protokol_vskrytija_id", Types.BIGINT },
			{ "status", Types.BIGINT }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("data_otkaza", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("data_vskrytija", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("izvewenie_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("lot_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("ocenka_uchastnikam_v_moment_vskrytija_id",
			Types.BIGINT);
		TABLE_COLUMNS_MAP.put("otkazal", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("postavwik_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("prichina_otkaza", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("protokol_vskrytija_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("status", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE = "create table sapp.ocenka_uchastnikam_v_moment_vskrytija (data_otkaza DATE null,data_vskrytija DATE null,izvewenie_id LONG,lot_id LONG,ocenka_uchastnikam_v_moment_vskrytija_id LONG not null primary key,otkazal LONG,postavwik_id LONG,prichina_otkaza VARCHAR(75) null,protokol_vskrytija_id LONG,status LONG)";
	public static final String TABLE_SQL_DROP = "drop table sapp.ocenka_uchastnikam_v_moment_vskrytija";
	public static final String ORDER_BY_JPQL = " ORDER BY ocenka_uchastnikam_v_moment_vskrytija.ocenka_uchastnikam_v_moment_vskrytija_id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY sapp.ocenka_uchastnikam_v_moment_vskrytija.ocenka_uchastnikam_v_moment_vskrytija_id ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(tj.ocenka.uchastnikam.v.moment.vskrytija.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.tj.ocenka.uchastnikam.v.moment.vskrytija.model.ocenka_uchastnikam_v_moment_vskrytija"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(tj.ocenka.uchastnikam.v.moment.vskrytija.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.tj.ocenka.uchastnikam.v.moment.vskrytija.model.ocenka_uchastnikam_v_moment_vskrytija"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static ocenka_uchastnikam_v_moment_vskrytija toModel(
		ocenka_uchastnikam_v_moment_vskrytijaSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		ocenka_uchastnikam_v_moment_vskrytija model = new ocenka_uchastnikam_v_moment_vskrytijaImpl();

		model.setData_otkaza(soapModel.getData_otkaza());
		model.setData_vskrytija(soapModel.getData_vskrytija());
		model.setIzvewenie_id(soapModel.getIzvewenie_id());
		model.setLot_id(soapModel.getLot_id());
		model.setOcenka_uchastnikam_v_moment_vskrytija_id(soapModel.getOcenka_uchastnikam_v_moment_vskrytija_id());
		model.setOtkazal(soapModel.getOtkazal());
		model.setPostavwik_id(soapModel.getPostavwik_id());
		model.setPrichina_otkaza(soapModel.getPrichina_otkaza());
		model.setProtokol_vskrytija_id(soapModel.getProtokol_vskrytija_id());
		model.setStatus(soapModel.getStatus());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<ocenka_uchastnikam_v_moment_vskrytija> toModels(
		ocenka_uchastnikam_v_moment_vskrytijaSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<ocenka_uchastnikam_v_moment_vskrytija> models = new ArrayList<ocenka_uchastnikam_v_moment_vskrytija>(soapModels.length);

		for (ocenka_uchastnikam_v_moment_vskrytijaSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(tj.ocenka.uchastnikam.v.moment.vskrytija.service.util.ServiceProps.get(
				"lock.expiration.time.tj.ocenka.uchastnikam.v.moment.vskrytija.model.ocenka_uchastnikam_v_moment_vskrytija"));

	public ocenka_uchastnikam_v_moment_vskrytijaModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _ocenka_uchastnikam_v_moment_vskrytija_id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setOcenka_uchastnikam_v_moment_vskrytija_id(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _ocenka_uchastnikam_v_moment_vskrytija_id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ocenka_uchastnikam_v_moment_vskrytija.class;
	}

	@Override
	public String getModelClassName() {
		return ocenka_uchastnikam_v_moment_vskrytija.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("data_otkaza", getData_otkaza());
		attributes.put("data_vskrytija", getData_vskrytija());
		attributes.put("izvewenie_id", getIzvewenie_id());
		attributes.put("lot_id", getLot_id());
		attributes.put("ocenka_uchastnikam_v_moment_vskrytija_id",
			getOcenka_uchastnikam_v_moment_vskrytija_id());
		attributes.put("otkazal", getOtkazal());
		attributes.put("postavwik_id", getPostavwik_id());
		attributes.put("prichina_otkaza", getPrichina_otkaza());
		attributes.put("protokol_vskrytija_id", getProtokol_vskrytija_id());
		attributes.put("status", getStatus());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Date data_otkaza = (Date)attributes.get("data_otkaza");

		if (data_otkaza != null) {
			setData_otkaza(data_otkaza);
		}

		Date data_vskrytija = (Date)attributes.get("data_vskrytija");

		if (data_vskrytija != null) {
			setData_vskrytija(data_vskrytija);
		}

		Long izvewenie_id = (Long)attributes.get("izvewenie_id");

		if (izvewenie_id != null) {
			setIzvewenie_id(izvewenie_id);
		}

		Long lot_id = (Long)attributes.get("lot_id");

		if (lot_id != null) {
			setLot_id(lot_id);
		}

		Long ocenka_uchastnikam_v_moment_vskrytija_id = (Long)attributes.get(
				"ocenka_uchastnikam_v_moment_vskrytija_id");

		if (ocenka_uchastnikam_v_moment_vskrytija_id != null) {
			setOcenka_uchastnikam_v_moment_vskrytija_id(ocenka_uchastnikam_v_moment_vskrytija_id);
		}

		Long otkazal = (Long)attributes.get("otkazal");

		if (otkazal != null) {
			setOtkazal(otkazal);
		}

		Long postavwik_id = (Long)attributes.get("postavwik_id");

		if (postavwik_id != null) {
			setPostavwik_id(postavwik_id);
		}

		String prichina_otkaza = (String)attributes.get("prichina_otkaza");

		if (prichina_otkaza != null) {
			setPrichina_otkaza(prichina_otkaza);
		}

		Long protokol_vskrytija_id = (Long)attributes.get(
				"protokol_vskrytija_id");

		if (protokol_vskrytija_id != null) {
			setProtokol_vskrytija_id(protokol_vskrytija_id);
		}

		Long status = (Long)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}
	}

	@JSON
	@Override
	public Date getData_otkaza() {
		return _data_otkaza;
	}

	@Override
	public void setData_otkaza(Date data_otkaza) {
		_data_otkaza = data_otkaza;
	}

	@JSON
	@Override
	public Date getData_vskrytija() {
		return _data_vskrytija;
	}

	@Override
	public void setData_vskrytija(Date data_vskrytija) {
		_data_vskrytija = data_vskrytija;
	}

	@JSON
	@Override
	public long getIzvewenie_id() {
		return _izvewenie_id;
	}

	@Override
	public void setIzvewenie_id(long izvewenie_id) {
		_izvewenie_id = izvewenie_id;
	}

	@JSON
	@Override
	public long getLot_id() {
		return _lot_id;
	}

	@Override
	public void setLot_id(long lot_id) {
		_lot_id = lot_id;
	}

	@JSON
	@Override
	public long getOcenka_uchastnikam_v_moment_vskrytija_id() {
		return _ocenka_uchastnikam_v_moment_vskrytija_id;
	}

	@Override
	public void setOcenka_uchastnikam_v_moment_vskrytija_id(
		long ocenka_uchastnikam_v_moment_vskrytija_id) {
		_ocenka_uchastnikam_v_moment_vskrytija_id = ocenka_uchastnikam_v_moment_vskrytija_id;
	}

	@JSON
	@Override
	public long getOtkazal() {
		return _otkazal;
	}

	@Override
	public void setOtkazal(long otkazal) {
		_otkazal = otkazal;
	}

	@JSON
	@Override
	public long getPostavwik_id() {
		return _postavwik_id;
	}

	@Override
	public void setPostavwik_id(long postavwik_id) {
		_postavwik_id = postavwik_id;
	}

	@JSON
	@Override
	public String getPrichina_otkaza() {
		if (_prichina_otkaza == null) {
			return StringPool.BLANK;
		}
		else {
			return _prichina_otkaza;
		}
	}

	@Override
	public void setPrichina_otkaza(String prichina_otkaza) {
		_prichina_otkaza = prichina_otkaza;
	}

	@JSON
	@Override
	public long getProtokol_vskrytija_id() {
		return _protokol_vskrytija_id;
	}

	@Override
	public void setProtokol_vskrytija_id(long protokol_vskrytija_id) {
		_protokol_vskrytija_id = protokol_vskrytija_id;
	}

	@JSON
	@Override
	public long getStatus() {
		return _status;
	}

	@Override
	public void setStatus(long status) {
		_status = status;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			ocenka_uchastnikam_v_moment_vskrytija.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ocenka_uchastnikam_v_moment_vskrytija toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ocenka_uchastnikam_v_moment_vskrytija)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ocenka_uchastnikam_v_moment_vskrytijaImpl ocenka_uchastnikam_v_moment_vskrytijaImpl =
			new ocenka_uchastnikam_v_moment_vskrytijaImpl();

		ocenka_uchastnikam_v_moment_vskrytijaImpl.setData_otkaza(getData_otkaza());
		ocenka_uchastnikam_v_moment_vskrytijaImpl.setData_vskrytija(getData_vskrytija());
		ocenka_uchastnikam_v_moment_vskrytijaImpl.setIzvewenie_id(getIzvewenie_id());
		ocenka_uchastnikam_v_moment_vskrytijaImpl.setLot_id(getLot_id());
		ocenka_uchastnikam_v_moment_vskrytijaImpl.setOcenka_uchastnikam_v_moment_vskrytija_id(getOcenka_uchastnikam_v_moment_vskrytija_id());
		ocenka_uchastnikam_v_moment_vskrytijaImpl.setOtkazal(getOtkazal());
		ocenka_uchastnikam_v_moment_vskrytijaImpl.setPostavwik_id(getPostavwik_id());
		ocenka_uchastnikam_v_moment_vskrytijaImpl.setPrichina_otkaza(getPrichina_otkaza());
		ocenka_uchastnikam_v_moment_vskrytijaImpl.setProtokol_vskrytija_id(getProtokol_vskrytija_id());
		ocenka_uchastnikam_v_moment_vskrytijaImpl.setStatus(getStatus());

		ocenka_uchastnikam_v_moment_vskrytijaImpl.resetOriginalValues();

		return ocenka_uchastnikam_v_moment_vskrytijaImpl;
	}

	@Override
	public int compareTo(
		ocenka_uchastnikam_v_moment_vskrytija ocenka_uchastnikam_v_moment_vskrytija) {
		long primaryKey = ocenka_uchastnikam_v_moment_vskrytija.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ocenka_uchastnikam_v_moment_vskrytija)) {
			return false;
		}

		ocenka_uchastnikam_v_moment_vskrytija ocenka_uchastnikam_v_moment_vskrytija =
			(ocenka_uchastnikam_v_moment_vskrytija)obj;

		long primaryKey = ocenka_uchastnikam_v_moment_vskrytija.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<ocenka_uchastnikam_v_moment_vskrytija> toCacheModel() {
		ocenka_uchastnikam_v_moment_vskrytijaCacheModel ocenka_uchastnikam_v_moment_vskrytijaCacheModel =
			new ocenka_uchastnikam_v_moment_vskrytijaCacheModel();

		Date data_otkaza = getData_otkaza();

		if (data_otkaza != null) {
			ocenka_uchastnikam_v_moment_vskrytijaCacheModel.data_otkaza = data_otkaza.getTime();
		}
		else {
			ocenka_uchastnikam_v_moment_vskrytijaCacheModel.data_otkaza = Long.MIN_VALUE;
		}

		Date data_vskrytija = getData_vskrytija();

		if (data_vskrytija != null) {
			ocenka_uchastnikam_v_moment_vskrytijaCacheModel.data_vskrytija = data_vskrytija.getTime();
		}
		else {
			ocenka_uchastnikam_v_moment_vskrytijaCacheModel.data_vskrytija = Long.MIN_VALUE;
		}

		ocenka_uchastnikam_v_moment_vskrytijaCacheModel.izvewenie_id = getIzvewenie_id();

		ocenka_uchastnikam_v_moment_vskrytijaCacheModel.lot_id = getLot_id();

		ocenka_uchastnikam_v_moment_vskrytijaCacheModel.ocenka_uchastnikam_v_moment_vskrytija_id = getOcenka_uchastnikam_v_moment_vskrytija_id();

		ocenka_uchastnikam_v_moment_vskrytijaCacheModel.otkazal = getOtkazal();

		ocenka_uchastnikam_v_moment_vskrytijaCacheModel.postavwik_id = getPostavwik_id();

		ocenka_uchastnikam_v_moment_vskrytijaCacheModel.prichina_otkaza = getPrichina_otkaza();

		String prichina_otkaza = ocenka_uchastnikam_v_moment_vskrytijaCacheModel.prichina_otkaza;

		if ((prichina_otkaza != null) && (prichina_otkaza.length() == 0)) {
			ocenka_uchastnikam_v_moment_vskrytijaCacheModel.prichina_otkaza = null;
		}

		ocenka_uchastnikam_v_moment_vskrytijaCacheModel.protokol_vskrytija_id = getProtokol_vskrytija_id();

		ocenka_uchastnikam_v_moment_vskrytijaCacheModel.status = getStatus();

		return ocenka_uchastnikam_v_moment_vskrytijaCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(21);

		sb.append("{data_otkaza=");
		sb.append(getData_otkaza());
		sb.append(", data_vskrytija=");
		sb.append(getData_vskrytija());
		sb.append(", izvewenie_id=");
		sb.append(getIzvewenie_id());
		sb.append(", lot_id=");
		sb.append(getLot_id());
		sb.append(", ocenka_uchastnikam_v_moment_vskrytija_id=");
		sb.append(getOcenka_uchastnikam_v_moment_vskrytija_id());
		sb.append(", otkazal=");
		sb.append(getOtkazal());
		sb.append(", postavwik_id=");
		sb.append(getPostavwik_id());
		sb.append(", prichina_otkaza=");
		sb.append(getPrichina_otkaza());
		sb.append(", protokol_vskrytija_id=");
		sb.append(getProtokol_vskrytija_id());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(34);

		sb.append("<model><model-name>");
		sb.append(
			"tj.ocenka.uchastnikam.v.moment.vskrytija.model.ocenka_uchastnikam_v_moment_vskrytija");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>data_otkaza</column-name><column-value><![CDATA[");
		sb.append(getData_otkaza());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>data_vskrytija</column-name><column-value><![CDATA[");
		sb.append(getData_vskrytija());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>izvewenie_id</column-name><column-value><![CDATA[");
		sb.append(getIzvewenie_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lot_id</column-name><column-value><![CDATA[");
		sb.append(getLot_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ocenka_uchastnikam_v_moment_vskrytija_id</column-name><column-value><![CDATA[");
		sb.append(getOcenka_uchastnikam_v_moment_vskrytija_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>otkazal</column-name><column-value><![CDATA[");
		sb.append(getOtkazal());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>postavwik_id</column-name><column-value><![CDATA[");
		sb.append(getPostavwik_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>prichina_otkaza</column-name><column-value><![CDATA[");
		sb.append(getPrichina_otkaza());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>protokol_vskrytija_id</column-name><column-value><![CDATA[");
		sb.append(getProtokol_vskrytija_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = ocenka_uchastnikam_v_moment_vskrytija.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			ocenka_uchastnikam_v_moment_vskrytija.class
		};
	private Date _data_otkaza;
	private Date _data_vskrytija;
	private long _izvewenie_id;
	private long _lot_id;
	private long _ocenka_uchastnikam_v_moment_vskrytija_id;
	private long _otkazal;
	private long _postavwik_id;
	private String _prichina_otkaza;
	private long _protokol_vskrytija_id;
	private long _status;
	private ocenka_uchastnikam_v_moment_vskrytija _escapedModel;
}