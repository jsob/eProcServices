/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package tj.pretenzii.ot.postavshhikov.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import tj.pretenzii.ot.postavshhikov.model.pretenzii_ot_postavshhikov;
import tj.pretenzii.ot.postavshhikov.model.pretenzii_ot_postavshhikovModel;
import tj.pretenzii.ot.postavshhikov.model.pretenzii_ot_postavshhikovSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the pretenzii_ot_postavshhikov service. Represents a row in the &quot;pretenzii_ot_postavshhikov_pretenzii_ot_postavshhikov&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link pretenzii_ot_postavshhikovModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link pretenzii_ot_postavshhikovImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see pretenzii_ot_postavshhikovImpl
 * @see pretenzii_ot_postavshhikov
 * @see pretenzii_ot_postavshhikovModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class pretenzii_ot_postavshhikovModelImpl extends BaseModelImpl<pretenzii_ot_postavshhikov>
	implements pretenzii_ot_postavshhikovModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a pretenzii_ot_postavshhikov model instance should use the {@link pretenzii_ot_postavshhikov} interface instead.
	 */
	public static final String TABLE_NAME = "pretenzii_ot_postavshhikov_pretenzii_ot_postavshhikov";
	public static final Object[][] TABLE_COLUMNS = {
			{ "data_zagruzki", Types.TIMESTAMP },
			{ "imja_fajla", Types.VARCHAR },
			{ "izvewenie_id", Types.BIGINT },
			{ "lot_id", Types.BIGINT },
			{ "nazvanie_dokumenta", Types.VARCHAR },
			{ "postavshik_id", Types.BIGINT },
			{ "pretenzii_ot_postavshhikov_id", Types.BIGINT },
			{ "zagruzil", Types.BIGINT }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("data_zagruzki", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("imja_fajla", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("izvewenie_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("lot_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("nazvanie_dokumenta", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("postavshik_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("pretenzii_ot_postavshhikov_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("zagruzil", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE = "create table pretenzii_ot_postavshhikov_pretenzii_ot_postavshhikov (data_zagruzki DATE null,imja_fajla VARCHAR(75) null,izvewenie_id LONG,lot_id LONG,nazvanie_dokumenta VARCHAR(75) null,postavshik_id LONG,pretenzii_ot_postavshhikov_id LONG not null primary key,zagruzil LONG)";
	public static final String TABLE_SQL_DROP = "drop table pretenzii_ot_postavshhikov_pretenzii_ot_postavshhikov";
	public static final String ORDER_BY_JPQL = " ORDER BY pretenzii_ot_postavshhikov.pretenzii_ot_postavshhikov_id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY pretenzii_ot_postavshhikov_pretenzii_ot_postavshhikov.pretenzii_ot_postavshhikov_id ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(tj.pretenzii.ot.postavshhikov.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.tj.pretenzii.ot.postavshhikov.model.pretenzii_ot_postavshhikov"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(tj.pretenzii.ot.postavshhikov.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.tj.pretenzii.ot.postavshhikov.model.pretenzii_ot_postavshhikov"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static pretenzii_ot_postavshhikov toModel(
		pretenzii_ot_postavshhikovSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		pretenzii_ot_postavshhikov model = new pretenzii_ot_postavshhikovImpl();

		model.setData_zagruzki(soapModel.getData_zagruzki());
		model.setImja_fajla(soapModel.getImja_fajla());
		model.setIzvewenie_id(soapModel.getIzvewenie_id());
		model.setLot_id(soapModel.getLot_id());
		model.setNazvanie_dokumenta(soapModel.getNazvanie_dokumenta());
		model.setPostavshik_id(soapModel.getPostavshik_id());
		model.setPretenzii_ot_postavshhikov_id(soapModel.getPretenzii_ot_postavshhikov_id());
		model.setZagruzil(soapModel.getZagruzil());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<pretenzii_ot_postavshhikov> toModels(
		pretenzii_ot_postavshhikovSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<pretenzii_ot_postavshhikov> models = new ArrayList<pretenzii_ot_postavshhikov>(soapModels.length);

		for (pretenzii_ot_postavshhikovSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(tj.pretenzii.ot.postavshhikov.service.util.ServiceProps.get(
				"lock.expiration.time.tj.pretenzii.ot.postavshhikov.model.pretenzii_ot_postavshhikov"));

	public pretenzii_ot_postavshhikovModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _pretenzii_ot_postavshhikov_id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setPretenzii_ot_postavshhikov_id(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _pretenzii_ot_postavshhikov_id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return pretenzii_ot_postavshhikov.class;
	}

	@Override
	public String getModelClassName() {
		return pretenzii_ot_postavshhikov.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("data_zagruzki", getData_zagruzki());
		attributes.put("imja_fajla", getImja_fajla());
		attributes.put("izvewenie_id", getIzvewenie_id());
		attributes.put("lot_id", getLot_id());
		attributes.put("nazvanie_dokumenta", getNazvanie_dokumenta());
		attributes.put("postavshik_id", getPostavshik_id());
		attributes.put("pretenzii_ot_postavshhikov_id",
			getPretenzii_ot_postavshhikov_id());
		attributes.put("zagruzil", getZagruzil());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Date data_zagruzki = (Date)attributes.get("data_zagruzki");

		if (data_zagruzki != null) {
			setData_zagruzki(data_zagruzki);
		}

		String imja_fajla = (String)attributes.get("imja_fajla");

		if (imja_fajla != null) {
			setImja_fajla(imja_fajla);
		}

		Long izvewenie_id = (Long)attributes.get("izvewenie_id");

		if (izvewenie_id != null) {
			setIzvewenie_id(izvewenie_id);
		}

		Long lot_id = (Long)attributes.get("lot_id");

		if (lot_id != null) {
			setLot_id(lot_id);
		}

		String nazvanie_dokumenta = (String)attributes.get("nazvanie_dokumenta");

		if (nazvanie_dokumenta != null) {
			setNazvanie_dokumenta(nazvanie_dokumenta);
		}

		Long postavshik_id = (Long)attributes.get("postavshik_id");

		if (postavshik_id != null) {
			setPostavshik_id(postavshik_id);
		}

		Long pretenzii_ot_postavshhikov_id = (Long)attributes.get(
				"pretenzii_ot_postavshhikov_id");

		if (pretenzii_ot_postavshhikov_id != null) {
			setPretenzii_ot_postavshhikov_id(pretenzii_ot_postavshhikov_id);
		}

		Long zagruzil = (Long)attributes.get("zagruzil");

		if (zagruzil != null) {
			setZagruzil(zagruzil);
		}
	}

	@JSON
	@Override
	public Date getData_zagruzki() {
		return _data_zagruzki;
	}

	@Override
	public void setData_zagruzki(Date data_zagruzki) {
		_data_zagruzki = data_zagruzki;
	}

	@JSON
	@Override
	public String getImja_fajla() {
		if (_imja_fajla == null) {
			return StringPool.BLANK;
		}
		else {
			return _imja_fajla;
		}
	}

	@Override
	public void setImja_fajla(String imja_fajla) {
		_imja_fajla = imja_fajla;
	}

	@JSON
	@Override
	public long getIzvewenie_id() {
		return _izvewenie_id;
	}

	@Override
	public void setIzvewenie_id(long izvewenie_id) {
		_izvewenie_id = izvewenie_id;
	}

	@JSON
	@Override
	public long getLot_id() {
		return _lot_id;
	}

	@Override
	public void setLot_id(long lot_id) {
		_lot_id = lot_id;
	}

	@JSON
	@Override
	public String getNazvanie_dokumenta() {
		if (_nazvanie_dokumenta == null) {
			return StringPool.BLANK;
		}
		else {
			return _nazvanie_dokumenta;
		}
	}

	@Override
	public void setNazvanie_dokumenta(String nazvanie_dokumenta) {
		_nazvanie_dokumenta = nazvanie_dokumenta;
	}

	@JSON
	@Override
	public long getPostavshik_id() {
		return _postavshik_id;
	}

	@Override
	public void setPostavshik_id(long postavshik_id) {
		_postavshik_id = postavshik_id;
	}

	@JSON
	@Override
	public long getPretenzii_ot_postavshhikov_id() {
		return _pretenzii_ot_postavshhikov_id;
	}

	@Override
	public void setPretenzii_ot_postavshhikov_id(
		long pretenzii_ot_postavshhikov_id) {
		_pretenzii_ot_postavshhikov_id = pretenzii_ot_postavshhikov_id;
	}

	@JSON
	@Override
	public long getZagruzil() {
		return _zagruzil;
	}

	@Override
	public void setZagruzil(long zagruzil) {
		_zagruzil = zagruzil;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			pretenzii_ot_postavshhikov.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public pretenzii_ot_postavshhikov toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (pretenzii_ot_postavshhikov)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		pretenzii_ot_postavshhikovImpl pretenzii_ot_postavshhikovImpl = new pretenzii_ot_postavshhikovImpl();

		pretenzii_ot_postavshhikovImpl.setData_zagruzki(getData_zagruzki());
		pretenzii_ot_postavshhikovImpl.setImja_fajla(getImja_fajla());
		pretenzii_ot_postavshhikovImpl.setIzvewenie_id(getIzvewenie_id());
		pretenzii_ot_postavshhikovImpl.setLot_id(getLot_id());
		pretenzii_ot_postavshhikovImpl.setNazvanie_dokumenta(getNazvanie_dokumenta());
		pretenzii_ot_postavshhikovImpl.setPostavshik_id(getPostavshik_id());
		pretenzii_ot_postavshhikovImpl.setPretenzii_ot_postavshhikov_id(getPretenzii_ot_postavshhikov_id());
		pretenzii_ot_postavshhikovImpl.setZagruzil(getZagruzil());

		pretenzii_ot_postavshhikovImpl.resetOriginalValues();

		return pretenzii_ot_postavshhikovImpl;
	}

	@Override
	public int compareTo(pretenzii_ot_postavshhikov pretenzii_ot_postavshhikov) {
		long primaryKey = pretenzii_ot_postavshhikov.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof pretenzii_ot_postavshhikov)) {
			return false;
		}

		pretenzii_ot_postavshhikov pretenzii_ot_postavshhikov = (pretenzii_ot_postavshhikov)obj;

		long primaryKey = pretenzii_ot_postavshhikov.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<pretenzii_ot_postavshhikov> toCacheModel() {
		pretenzii_ot_postavshhikovCacheModel pretenzii_ot_postavshhikovCacheModel =
			new pretenzii_ot_postavshhikovCacheModel();

		Date data_zagruzki = getData_zagruzki();

		if (data_zagruzki != null) {
			pretenzii_ot_postavshhikovCacheModel.data_zagruzki = data_zagruzki.getTime();
		}
		else {
			pretenzii_ot_postavshhikovCacheModel.data_zagruzki = Long.MIN_VALUE;
		}

		pretenzii_ot_postavshhikovCacheModel.imja_fajla = getImja_fajla();

		String imja_fajla = pretenzii_ot_postavshhikovCacheModel.imja_fajla;

		if ((imja_fajla != null) && (imja_fajla.length() == 0)) {
			pretenzii_ot_postavshhikovCacheModel.imja_fajla = null;
		}

		pretenzii_ot_postavshhikovCacheModel.izvewenie_id = getIzvewenie_id();

		pretenzii_ot_postavshhikovCacheModel.lot_id = getLot_id();

		pretenzii_ot_postavshhikovCacheModel.nazvanie_dokumenta = getNazvanie_dokumenta();

		String nazvanie_dokumenta = pretenzii_ot_postavshhikovCacheModel.nazvanie_dokumenta;

		if ((nazvanie_dokumenta != null) && (nazvanie_dokumenta.length() == 0)) {
			pretenzii_ot_postavshhikovCacheModel.nazvanie_dokumenta = null;
		}

		pretenzii_ot_postavshhikovCacheModel.postavshik_id = getPostavshik_id();

		pretenzii_ot_postavshhikovCacheModel.pretenzii_ot_postavshhikov_id = getPretenzii_ot_postavshhikov_id();

		pretenzii_ot_postavshhikovCacheModel.zagruzil = getZagruzil();

		return pretenzii_ot_postavshhikovCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(17);

		sb.append("{data_zagruzki=");
		sb.append(getData_zagruzki());
		sb.append(", imja_fajla=");
		sb.append(getImja_fajla());
		sb.append(", izvewenie_id=");
		sb.append(getIzvewenie_id());
		sb.append(", lot_id=");
		sb.append(getLot_id());
		sb.append(", nazvanie_dokumenta=");
		sb.append(getNazvanie_dokumenta());
		sb.append(", postavshik_id=");
		sb.append(getPostavshik_id());
		sb.append(", pretenzii_ot_postavshhikov_id=");
		sb.append(getPretenzii_ot_postavshhikov_id());
		sb.append(", zagruzil=");
		sb.append(getZagruzil());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(28);

		sb.append("<model><model-name>");
		sb.append(
			"tj.pretenzii.ot.postavshhikov.model.pretenzii_ot_postavshhikov");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>data_zagruzki</column-name><column-value><![CDATA[");
		sb.append(getData_zagruzki());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>imja_fajla</column-name><column-value><![CDATA[");
		sb.append(getImja_fajla());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>izvewenie_id</column-name><column-value><![CDATA[");
		sb.append(getIzvewenie_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lot_id</column-name><column-value><![CDATA[");
		sb.append(getLot_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nazvanie_dokumenta</column-name><column-value><![CDATA[");
		sb.append(getNazvanie_dokumenta());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>postavshik_id</column-name><column-value><![CDATA[");
		sb.append(getPostavshik_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>pretenzii_ot_postavshhikov_id</column-name><column-value><![CDATA[");
		sb.append(getPretenzii_ot_postavshhikov_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>zagruzil</column-name><column-value><![CDATA[");
		sb.append(getZagruzil());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = pretenzii_ot_postavshhikov.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			pretenzii_ot_postavshhikov.class
		};
	private Date _data_zagruzki;
	private String _imja_fajla;
	private long _izvewenie_id;
	private long _lot_id;
	private String _nazvanie_dokumenta;
	private long _postavshik_id;
	private long _pretenzii_ot_postavshhikov_id;
	private long _zagruzil;
	private pretenzii_ot_postavshhikov _escapedModel;
}