/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package tj.zajavki.ot.postavwikov.service.base;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.dao.db.DB;
import com.liferay.portal.kernel.dao.db.DBManagerUtil;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.dao.orm.ActionableDynamicQuery;
import com.liferay.portal.kernel.dao.orm.DefaultActionableDynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQueryFactoryUtil;
import com.liferay.portal.kernel.dao.orm.IndexableActionableDynamicQuery;
import com.liferay.portal.kernel.dao.orm.Projection;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.model.PersistedModel;
import com.liferay.portal.kernel.module.framework.service.IdentifiableOSGiService;
import com.liferay.portal.kernel.search.Indexable;
import com.liferay.portal.kernel.search.IndexableType;
import com.liferay.portal.kernel.service.BaseLocalServiceImpl;
import com.liferay.portal.kernel.service.PersistedModelLocalServiceRegistry;
import com.liferay.portal.kernel.service.persistence.ClassNamePersistence;
import com.liferay.portal.kernel.service.persistence.UserPersistence;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.spring.extender.service.ServiceReference;

import tj.zajavki.ot.postavwikov.model.zajavki_ot_postavwikov;
import tj.zajavki.ot.postavwikov.service.persistence.zajavki_ot_postavwikovPersistence;
import tj.zajavki.ot.postavwikov.service.zajavki_ot_postavwikovLocalService;

import java.io.Serializable;

import java.util.List;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the zajavki_ot_postavwikov local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link tj.zajavki.ot.postavwikov.service.impl.zajavki_ot_postavwikovLocalServiceImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see tj.zajavki.ot.postavwikov.service.impl.zajavki_ot_postavwikovLocalServiceImpl
 * @see tj.zajavki.ot.postavwikov.service.zajavki_ot_postavwikovLocalServiceUtil
 * @generated
 */
@ProviderType
public abstract class zajavki_ot_postavwikovLocalServiceBaseImpl
	extends BaseLocalServiceImpl implements zajavki_ot_postavwikovLocalService,
		IdentifiableOSGiService {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link tj.zajavki.ot.postavwikov.service.zajavki_ot_postavwikovLocalServiceUtil} to access the zajavki_ot_postavwikov local service.
	 */

	/**
	 * Adds the zajavki_ot_postavwikov to the database. Also notifies the appropriate model listeners.
	 *
	 * @param zajavki_ot_postavwikov the zajavki_ot_postavwikov
	 * @return the zajavki_ot_postavwikov that was added
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public zajavki_ot_postavwikov addzajavki_ot_postavwikov(
		zajavki_ot_postavwikov zajavki_ot_postavwikov) {
		zajavki_ot_postavwikov.setNew(true);

		return zajavki_ot_postavwikovPersistence.update(zajavki_ot_postavwikov);
	}

	/**
	 * Creates a new zajavki_ot_postavwikov with the primary key. Does not add the zajavki_ot_postavwikov to the database.
	 *
	 * @param zajavki_ot_postavwikov_id the primary key for the new zajavki_ot_postavwikov
	 * @return the new zajavki_ot_postavwikov
	 */
	@Override
	public zajavki_ot_postavwikov createzajavki_ot_postavwikov(
		long zajavki_ot_postavwikov_id) {
		return zajavki_ot_postavwikovPersistence.create(zajavki_ot_postavwikov_id);
	}

	/**
	 * Deletes the zajavki_ot_postavwikov with the primary key from the database. Also notifies the appropriate model listeners.
	 *
	 * @param zajavki_ot_postavwikov_id the primary key of the zajavki_ot_postavwikov
	 * @return the zajavki_ot_postavwikov that was removed
	 * @throws PortalException if a zajavki_ot_postavwikov with the primary key could not be found
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public zajavki_ot_postavwikov deletezajavki_ot_postavwikov(
		long zajavki_ot_postavwikov_id) throws PortalException {
		return zajavki_ot_postavwikovPersistence.remove(zajavki_ot_postavwikov_id);
	}

	/**
	 * Deletes the zajavki_ot_postavwikov from the database. Also notifies the appropriate model listeners.
	 *
	 * @param zajavki_ot_postavwikov the zajavki_ot_postavwikov
	 * @return the zajavki_ot_postavwikov that was removed
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public zajavki_ot_postavwikov deletezajavki_ot_postavwikov(
		zajavki_ot_postavwikov zajavki_ot_postavwikov) {
		return zajavki_ot_postavwikovPersistence.remove(zajavki_ot_postavwikov);
	}

	@Override
	public DynamicQuery dynamicQuery() {
		Class<?> clazz = getClass();

		return DynamicQueryFactoryUtil.forClass(zajavki_ot_postavwikov.class,
			clazz.getClassLoader());
	}

	/**
	 * Performs a dynamic query on the database and returns the matching rows.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the matching rows
	 */
	@Override
	public <T> List<T> dynamicQuery(DynamicQuery dynamicQuery) {
		return zajavki_ot_postavwikovPersistence.findWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Performs a dynamic query on the database and returns a range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link tj.zajavki.ot.postavwikov.model.impl.zajavki_ot_postavwikovModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @return the range of matching rows
	 */
	@Override
	public <T> List<T> dynamicQuery(DynamicQuery dynamicQuery, int start,
		int end) {
		return zajavki_ot_postavwikovPersistence.findWithDynamicQuery(dynamicQuery,
			start, end);
	}

	/**
	 * Performs a dynamic query on the database and returns an ordered range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link tj.zajavki.ot.postavwikov.model.impl.zajavki_ot_postavwikovModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
	 * @return the ordered range of matching rows
	 */
	@Override
	public <T> List<T> dynamicQuery(DynamicQuery dynamicQuery, int start,
		int end, OrderByComparator<T> orderByComparator) {
		return zajavki_ot_postavwikovPersistence.findWithDynamicQuery(dynamicQuery,
			start, end, orderByComparator);
	}

	/**
	 * Returns the number of rows matching the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the number of rows matching the dynamic query
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery) {
		return zajavki_ot_postavwikovPersistence.countWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Returns the number of rows matching the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @param projection the projection to apply to the query
	 * @return the number of rows matching the dynamic query
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery,
		Projection projection) {
		return zajavki_ot_postavwikovPersistence.countWithDynamicQuery(dynamicQuery,
			projection);
	}

	@Override
	public zajavki_ot_postavwikov fetchzajavki_ot_postavwikov(
		long zajavki_ot_postavwikov_id) {
		return zajavki_ot_postavwikovPersistence.fetchByPrimaryKey(zajavki_ot_postavwikov_id);
	}

	/**
	 * Returns the zajavki_ot_postavwikov with the primary key.
	 *
	 * @param zajavki_ot_postavwikov_id the primary key of the zajavki_ot_postavwikov
	 * @return the zajavki_ot_postavwikov
	 * @throws PortalException if a zajavki_ot_postavwikov with the primary key could not be found
	 */
	@Override
	public zajavki_ot_postavwikov getzajavki_ot_postavwikov(
		long zajavki_ot_postavwikov_id) throws PortalException {
		return zajavki_ot_postavwikovPersistence.findByPrimaryKey(zajavki_ot_postavwikov_id);
	}

	@Override
	public ActionableDynamicQuery getActionableDynamicQuery() {
		ActionableDynamicQuery actionableDynamicQuery = new DefaultActionableDynamicQuery();

		actionableDynamicQuery.setBaseLocalService(zajavki_ot_postavwikovLocalService);
		actionableDynamicQuery.setClassLoader(getClassLoader());
		actionableDynamicQuery.setModelClass(zajavki_ot_postavwikov.class);

		actionableDynamicQuery.setPrimaryKeyPropertyName(
			"zajavki_ot_postavwikov_id");

		return actionableDynamicQuery;
	}

	@Override
	public IndexableActionableDynamicQuery getIndexableActionableDynamicQuery() {
		IndexableActionableDynamicQuery indexableActionableDynamicQuery = new IndexableActionableDynamicQuery();

		indexableActionableDynamicQuery.setBaseLocalService(zajavki_ot_postavwikovLocalService);
		indexableActionableDynamicQuery.setClassLoader(getClassLoader());
		indexableActionableDynamicQuery.setModelClass(zajavki_ot_postavwikov.class);

		indexableActionableDynamicQuery.setPrimaryKeyPropertyName(
			"zajavki_ot_postavwikov_id");

		return indexableActionableDynamicQuery;
	}

	protected void initActionableDynamicQuery(
		ActionableDynamicQuery actionableDynamicQuery) {
		actionableDynamicQuery.setBaseLocalService(zajavki_ot_postavwikovLocalService);
		actionableDynamicQuery.setClassLoader(getClassLoader());
		actionableDynamicQuery.setModelClass(zajavki_ot_postavwikov.class);

		actionableDynamicQuery.setPrimaryKeyPropertyName(
			"zajavki_ot_postavwikov_id");
	}

	/**
	 * @throws PortalException
	 */
	@Override
	public PersistedModel deletePersistedModel(PersistedModel persistedModel)
		throws PortalException {
		return zajavki_ot_postavwikovLocalService.deletezajavki_ot_postavwikov((zajavki_ot_postavwikov)persistedModel);
	}

	@Override
	public PersistedModel getPersistedModel(Serializable primaryKeyObj)
		throws PortalException {
		return zajavki_ot_postavwikovPersistence.findByPrimaryKey(primaryKeyObj);
	}

	/**
	 * Returns a range of all the zajavki_ot_postavwikovs.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link tj.zajavki.ot.postavwikov.model.impl.zajavki_ot_postavwikovModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param start the lower bound of the range of zajavki_ot_postavwikovs
	 * @param end the upper bound of the range of zajavki_ot_postavwikovs (not inclusive)
	 * @return the range of zajavki_ot_postavwikovs
	 */
	@Override
	public List<zajavki_ot_postavwikov> getzajavki_ot_postavwikovs(int start,
		int end) {
		return zajavki_ot_postavwikovPersistence.findAll(start, end);
	}

	/**
	 * Returns the number of zajavki_ot_postavwikovs.
	 *
	 * @return the number of zajavki_ot_postavwikovs
	 */
	@Override
	public int getzajavki_ot_postavwikovsCount() {
		return zajavki_ot_postavwikovPersistence.countAll();
	}

	/**
	 * Updates the zajavki_ot_postavwikov in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	 *
	 * @param zajavki_ot_postavwikov the zajavki_ot_postavwikov
	 * @return the zajavki_ot_postavwikov that was updated
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public zajavki_ot_postavwikov updatezajavki_ot_postavwikov(
		zajavki_ot_postavwikov zajavki_ot_postavwikov) {
		return zajavki_ot_postavwikovPersistence.update(zajavki_ot_postavwikov);
	}

	/**
	 * Returns the zajavki_ot_postavwikov local service.
	 *
	 * @return the zajavki_ot_postavwikov local service
	 */
	public zajavki_ot_postavwikovLocalService getzajavki_ot_postavwikovLocalService() {
		return zajavki_ot_postavwikovLocalService;
	}

	/**
	 * Sets the zajavki_ot_postavwikov local service.
	 *
	 * @param zajavki_ot_postavwikovLocalService the zajavki_ot_postavwikov local service
	 */
	public void setzajavki_ot_postavwikovLocalService(
		zajavki_ot_postavwikovLocalService zajavki_ot_postavwikovLocalService) {
		this.zajavki_ot_postavwikovLocalService = zajavki_ot_postavwikovLocalService;
	}

	/**
	 * Returns the zajavki_ot_postavwikov persistence.
	 *
	 * @return the zajavki_ot_postavwikov persistence
	 */
	public zajavki_ot_postavwikovPersistence getzajavki_ot_postavwikovPersistence() {
		return zajavki_ot_postavwikovPersistence;
	}

	/**
	 * Sets the zajavki_ot_postavwikov persistence.
	 *
	 * @param zajavki_ot_postavwikovPersistence the zajavki_ot_postavwikov persistence
	 */
	public void setzajavki_ot_postavwikovPersistence(
		zajavki_ot_postavwikovPersistence zajavki_ot_postavwikovPersistence) {
		this.zajavki_ot_postavwikovPersistence = zajavki_ot_postavwikovPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.kernel.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.kernel.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the class name local service.
	 *
	 * @return the class name local service
	 */
	public com.liferay.portal.kernel.service.ClassNameLocalService getClassNameLocalService() {
		return classNameLocalService;
	}

	/**
	 * Sets the class name local service.
	 *
	 * @param classNameLocalService the class name local service
	 */
	public void setClassNameLocalService(
		com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService) {
		this.classNameLocalService = classNameLocalService;
	}

	/**
	 * Returns the class name persistence.
	 *
	 * @return the class name persistence
	 */
	public ClassNamePersistence getClassNamePersistence() {
		return classNamePersistence;
	}

	/**
	 * Sets the class name persistence.
	 *
	 * @param classNamePersistence the class name persistence
	 */
	public void setClassNamePersistence(
		ClassNamePersistence classNamePersistence) {
		this.classNamePersistence = classNamePersistence;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.kernel.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.kernel.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.kernel.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		persistedModelLocalServiceRegistry.register("tj.zajavki.ot.postavwikov.model.zajavki_ot_postavwikov",
			zajavki_ot_postavwikovLocalService);
	}

	public void destroy() {
		persistedModelLocalServiceRegistry.unregister(
			"tj.zajavki.ot.postavwikov.model.zajavki_ot_postavwikov");
	}

	/**
	 * Returns the OSGi service identifier.
	 *
	 * @return the OSGi service identifier
	 */
	@Override
	public String getOSGiServiceIdentifier() {
		return zajavki_ot_postavwikovLocalService.class.getName();
	}

	protected Class<?> getModelClass() {
		return zajavki_ot_postavwikov.class;
	}

	protected String getModelClassName() {
		return zajavki_ot_postavwikov.class.getName();
	}

	/**
	 * Performs a SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) {
		try {
			DataSource dataSource = zajavki_ot_postavwikovPersistence.getDataSource();

			DB db = DBManagerUtil.getDB();

			sql = db.buildSQL(sql);
			sql = PortalUtil.transformSQL(sql);

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = zajavki_ot_postavwikovLocalService.class)
	protected zajavki_ot_postavwikovLocalService zajavki_ot_postavwikovLocalService;
	@BeanReference(type = zajavki_ot_postavwikovPersistence.class)
	protected zajavki_ot_postavwikovPersistence zajavki_ot_postavwikovPersistence;
	@ServiceReference(type = com.liferay.counter.kernel.service.CounterLocalService.class)
	protected com.liferay.counter.kernel.service.CounterLocalService counterLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.ClassNameLocalService.class)
	protected com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService;
	@ServiceReference(type = ClassNamePersistence.class)
	protected ClassNamePersistence classNamePersistence;
	@ServiceReference(type = com.liferay.portal.kernel.service.ResourceLocalService.class)
	protected com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.UserLocalService.class)
	protected com.liferay.portal.kernel.service.UserLocalService userLocalService;
	@ServiceReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	@ServiceReference(type = PersistedModelLocalServiceRegistry.class)
	protected PersistedModelLocalServiceRegistry persistedModelLocalServiceRegistry;
}